# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.late_borrowers_late import LateBorrowersLate
from openapi_server import util

from openapi_server.models.late_borrowers_late import LateBorrowersLate  # noqa: E501

class LateBorrowers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, borrower=None, late=None):  # noqa: E501
        """LateBorrowers - a model defined in OpenAPI

        :param borrower: The borrower of this LateBorrowers.  # noqa: E501
        :type borrower: str
        :param late: The late of this LateBorrowers.  # noqa: E501
        :type late: List[LateBorrowersLate]
        """
        self.openapi_types = {
            'borrower': str,
            'late': List[LateBorrowersLate]
        }

        self.attribute_map = {
            'borrower': 'borrower',
            'late': 'late'
        }

        self._borrower = borrower
        self._late = late

    @classmethod
    def from_dict(cls, dikt) -> 'LateBorrowers':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The late_borrowers of this LateBorrowers.  # noqa: E501
        :rtype: LateBorrowers
        """
        return util.deserialize_model(dikt, cls)

    @property
    def borrower(self):
        """Gets the borrower of this LateBorrowers.


        :return: The borrower of this LateBorrowers.
        :rtype: str
        """
        return self._borrower

    @borrower.setter
    def borrower(self, borrower):
        """Sets the borrower of this LateBorrowers.


        :param borrower: The borrower of this LateBorrowers.
        :type borrower: str
        """
        if borrower is None:
            raise ValueError("Invalid value for `borrower`, must not be `None`")  # noqa: E501

        self._borrower = borrower

    @property
    def late(self):
        """Gets the late of this LateBorrowers.


        :return: The late of this LateBorrowers.
        :rtype: List[LateBorrowersLate]
        """
        return self._late

    @late.setter
    def late(self, late):
        """Sets the late of this LateBorrowers.


        :param late: The late of this LateBorrowers.
        :type late: List[LateBorrowersLate]
        """
        if late is None:
            raise ValueError("Invalid value for `late`, must not be `None`")  # noqa: E501

        self._late = late
